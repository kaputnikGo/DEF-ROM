  ADDR B1 B2 B3 B4 C:\Users\admin\Documents\ASM-tests\DEF-ROM-02.   PAGE       1

                           ORG $F800       ;origin
  F800 FF                  FCB $FF         ;
  F801 0F          RESET   SEI             ;disable interrupts,set interrupt mask
  F802 8E 00 7F            LDS #$007F      ;init stack pointer
  F805 CE 04 00            LDX #$0400      ;load PIA (DAC) addr
  F808 6F 01               CLR $01,X       ;switch to DDR
  F80A 6F 03               CLR $03,X       ;and for 2nd port
  F80C 86 FF               LDAA #$FF
  F80E A7 00               STAA $00,X      ; all outputs on chn A
  F810 6F 02               CLR $02,X       ;all inputs on chn B
  F812 86 37               LDAA #$37       ;CB2 is output, output reg selected
  F814 A7 03               STAA $03,X      ;IRQB on low to hi, enabled
  F816 86 3C               LDAA #$3C       ;CA2 is output, output reg selected
  F818 A7 01               STAA $01,X      ;IRQA on hi to low, disabled
  F81A 97 09               STAA <$09       ;store that setting
  F81C 4F                  CLRA            ;clear A
  F81D 97 07               STAA <$07       ;next clears some mem locations
  F81F 97 04               STAA <$04
  F821 97 05               STAA <$05
  F823 97 06               STAA <$06
  F825 97 08               STAA <$08
  F827 0E                  CLI             ;enable interrupts
  F828 20 FE               BRA $F828       ;$F828,wait for interrupt
  F82A 16                  TAB             ;$F82A,synth1(boot)
  F82B 48                  ASLA            ;shift left A
  F82C 48                  ASLA            ;shift left A
  F82D 48                  ASLA            ;A x 8
  F82E 1B                  ABA             ;A x 8 + A = 9A
  F82F CE 00 13            LDX #$0013      ;load 19 in X reg
  F832 DF 0F               STX <$0f        ;store in zero page
  F834 CE FD 76            LDX #$FD76      ;load table addr
  F837 BD FD 1F            JSR CALCOS      ;($FD21)calcs X + A -> X
  F83A C6 09               LDAB #$09       ;put 9 in B reg
  F83C 7E FB 0A            JMP $FB0A       ;jumps to...
  F83F 96 1B               LDAA <$1B       ;subrtn, vol (always $FF)
  F841 B7 04 00            STAA >$0400     ;DAC output
  F844 96 13               LDAA <$13       ;load accum A
  F846 97 1C               STAA <$1C       ;store accum A
  F848 96 14               LDAA <$14       ;load accum A
  F84A 97 1D               STAA <$1D       ;store accum A
  F84C DE 18               LDX <$18        ;load index reg
  F84E 96 1C               LDAA <$1C       ;load accum A, loop, alt 0-255, variable delay
  F850 73 04 00            COM >$0400      ;DAC invert
  F853 09                  DEX             ;decrement index reg
  F854 27 10               BEQ $F866       ;branch if equal to zero
  F856 4A                  DECA            ;decrement A
  F857 26 FA               BNE $F853       ;branch if not equal to zero
  F859 73 04 00            COM >$0400      ;DAC invert
  F85C 96 1D               LDAA <$1D       ;load accum A
  F85E 09                  DEX             ;decrement index reg
  F85F 27 05               BEQ $F866       ;as above
  F861 4A                  DECA            ;as above
  F862 26 FA               BNE $F85E       ;branch != 0
  F864 20 E8               BRA $F84E       ;branch always, end loop
  F866 B6 04 00            LDAA >$0400     ;load accum DAC
  F869 2B 01               BMI $F86C       ;branch if minus
  F86B 43                  COMA            ;complement A
  F86C 8B 00               ADDA #$00       ;
  F86E B7 04 00            STAA >$0400     ;DAC invert
  F871 96 1C               LDAA <$1C       ;load accum A
  F873 9B 15               ADDA <$15       ;add A
  F875 97 1C               STAA <$1C       ;store accum A
  F877 96 1D               LDAA <$1D       ;load accum A
  F879 9B 16               ADDA <$16       ;add A
  F87B 97 1D               STAA <$1D       ;store accum A
  F87D 91 17               CMPA <$17       ;compare A
  F87F 26 CB               BNE $F84C       ;branch if != 0
  F881 96 1A               LDAA <$1A       ;load accum A
  F883 27 06               BEQ $F88B       ;branch if = 0
  F885 9B 13               ADDA <$13       ;add A
  F887 97 13               STAA <$13       ;store A
  F889 26 B9               BNE $F844       ;branch if != 0
  F88B 39                  RTS             ;return from subroutine
  F88C 86 01               LDAA #$01       ;Synth2(PWM?),W vector
  F88E 97 1A               STAA <$1A       ;
  F890 C6 03               LDAB #$03       ;
  F892 20 0A               BRA $F89E       ;branch always
  F894 86 FE               LDAA #$FE       ;W vector
  F896 97 1A               STAA <$1a       ;
  F898 86 C0               LDAA #$C0       ;
  F89A C6 10               LDAB #$10       ;
  F89C 20 00               BRA $F89E       ;
  F89E 97 19               STAA <$19       ;$F89E
  F8A0 86 FF               LDAA #$FF       ;
  F8A2 B7 04 00            STAA >$0400     ;store A to DAC
  F8A5 D7 15               STAB <$15       ;
  F8A7 D6 15               LDAB <$15       ;$F8A7
  F8A9 96 0A               LDAA <$0A       ;$F8A9
  F8AB 44                  LSRA            ;logical shift right
  F8AC 44                  LSRA            ;
  F8AD 44                  LSRA            ;
  F8AE 98 0A               EORA <$0A       ;exclusive OR A
  F8B0 44                  LSRA            ;
  F8B1 76 00 09            ROR >$0009      ;rotate right
  F8B4 76 00 0A            ROR >$000A      ;
  F8B7 24 03               BCC $F8BC       ;branch if Carry clear
  F8B9 73 04 00            COM >$0400      ;DAC invert
  F8BC 96 19               LDAA <$19       ;$F8BC
  F8BE 4A                  DECA            ;$F8BE,decrement A
  F8BF 26 FD               BNE $F8BE       ;branch if != 0
  F8C1 5A                  DECB            ;decrement B
  F8C2 26 E5               BNE $F8A9       ;branch if != 0
  F8C4 96 19               LDAA <$19       ;
  F8C6 9B 1A               ADDA <$1A       ;
  F8C8 97 19               STAA <$19       ;
  F8CA 26 DB               BNE $F8A7       ;
  F8CC 39                  RTS             ;return subroutine
  F8CD 86 20               LDAA #$20       ;Synth3(?), W vector
  F8CF 97 15               STAA <$15       ;
  F8D1 97 18               STAA <$18       ;
  F8D3 86 01               LDAA #$01       ;
  F8D5 CE 00 01            LDX #$0001      ;load index register
  F8D8 C6 FF               LDAB #$FF       ;
  F8DA 20 00               BRA $F8DC       ;for timing?
  F8DC 97 13               STAA <$13       ;$F8DC
  F8DE DF 16               STX <$16        ;$F8DE,store index reg
  F8E0 D7 14               STAB <$14       ;$F8E0
  F8E2 D6 15               LDAB <$15       ;
  F8E4 96 0A               LDAA <$0A       ;$F8E4
  F8E6 44                  LSRA            ;logical shift right
  F8E7 44                  LSRA            ;
  F8E8 44                  LSRA            ;
  F8E9 98 0A               EORA <$0A       ;exclusive OR
  F8EB 44                  LSRA            ;
  F8EC 76 00 09            ROR >$0009      ;rotate right
  F8EF 76 00 0A            ROR >$000A      ;
  F8F2 86 00               LDAA #$00       ;
  F8F4 24 02               BCC $F8F8       ;branch if Carry clear
  F8F6 96 14               LDAA <$14       ;
  F8F8 B7 04 00            STAA >$0400     ;$F8F8,DAC output
  F8FB DE 16               LDX <$16        ;load index reg
  F8FD 09                  DEX             ;$F8FD,decrement index reg
  F8FE 26 FD               BNE $F8FD       ;branch if != 0
  F900 5A                  DECB            ;
  F901 26 E1               BNE $F8E4       ;
  F903 D6 14               LDAB <$14       ;
  F905 D0 13               SUBB <$13       ;subtract B
  F907 27 09               BEQ $F912       ;branch if = 0
  F909 DE 16               LDX <$16        ;load index reg
  F90B 08                  INX             ;increment index reg
  F90C 96 18               LDAA <$18       ;
  F90E 27 D0               BEQ $F8E0       ;branch if = 0
  F910 20 CC               BRA $F8DE       ;branch always
  F912 39                  RTS             ;return subroutine
  F913 C6 01               LDAB #$01       ;Synth4(?),W vector
  F915 D7 04               STAB <$04       ;
  F917 4F                  CLRA            ;clear A
  F918 97 19               STAA <$19       ;
  F91A 20 14               BRA $F930       ;branch always
  F91C 4F                  CLRA            ;W vector
  F91D 97 19               STAA <$19       ;
  F91F C6 03               LDAB #$03       ;
  F921 20 0D               BRA $F930       ;branch always
  F923 86 01               LDAA #$01       ;W vector
  F925 97 19               STAA <$19       ;
  F927 CE 03 E8            LDX #$03E8      ;load index reg
  F92A 86 01               LDAA #$01       ;
  F92C C6 FF               LDAB #$FF       ;
  F92E 20 00               BRA $F930       ;branch always
  F930 97 18               STAA <$18       ;$F930
  F932 D7 13               STAB <$13       ;
  F934 DF 16               STX <$16        ;store index register
  F936 7F 00 15            CLR >$0015      ;clear
  F939 DE 16               LDX <$16        ;$F939,load index reg
  F93B B6 04 00            LDAA >$0400     ;DAC
  F93E 16                  TAB             ;$F93E,transfer accums
  F93F 54                  LSRB            ;logical shift right
  F940 54                  LSRB            ;
  F941 54                  LSRB            ;
  F942 D8 0A               EORB <$0A       ;exclusive OR
  F944 54                  LSRB            ;
  F945 76 00 09            ROR >$0009      ;rotate right
  F948 76 00 0A            ROR >$000A      ;
  F94B D6 13               LDAB <$13       ;
  F94D 7D 00 19            TST >$0019      ;test for 0 or negative
  F950 27 02               BEQ $F954       ;branch if = 0
  F952 D4 09               ANDB <$09       ;logical and
  F954 D7 14               STAB <$14       ;$F954
  F956 D6 15               LDAB <$15       ;
  F958 91 0A               CMPA <$0A       ;compare
  F95A 22 12               BHI $F96E       ;branch if higher
  F95C 09                  DEX             ;$F95C,decr index reg
  F95D 27 26               BEQ $F985       ;
  F95F B7 04 00            STAA >$0400     ;DAC output
  F962 DB 15               ADDB <$15       ;
  F964 99 14               ADCA <$14       ;add with Carry
  F966 25 16               BCS $F97E       ;branch if Carry set
  F968 91 0A               CMPA <$0A       ;
  F96A 23 F0               BLS $F95C       ;branch if lower or same
  F96C 20 10               BRA $F97E       ;
  F96E 09                  DEX             ;$F96E
  F96F 27 14               BEQ $F985       ;
  F971 B7 04 00            STAA >$0400     ;DAC output
  F974 D0 15               SUBB <$15       ;
  F976 92 14               SBCA <$14       ;subtract with Carry
  F978 25 04               BCS $F97E       ;
  F97A 91 0A               CMPA <$0A       ;
  F97C 22 F0               BHI $F96E       ;branch if higher
  F97E 96 0A               LDAA <$0A       ;$F97E
  F980 B7 04 00            STAA >$0400     ;DAC output
  F983 20 B9               BRA $F93E       ;
  F985 D6 18               LDAB <$18       ;$F985
  F987 27 B5               BEQ $F93E       ;
  F989 96 13               LDAA <$13       ;
  F98B D6 15               LDAB <$15       ;
  F98D 44                  LSRA            ;logical shift right
  F98E 56                  RORB            ;rotate right
  F98F 44                  LSRA            ;
  F990 56                  RORB            ;
  F991 44                  LSRA            ;
  F992 56                  RORB            ;
  F993 43                  COMA            ;complement
  F994 50                  NEGB            ;negate
  F995 82 FF               SBCA #$FF       ;subtract with Carry
  F997 DB 15               ADDB <$15       ;
  F999 99 13               ADCA <$13       ;add with Carry
  F99B D7 15               STAB <$15       ;
  F99D 97 13               STAA <$13       ;
  F99F 26 98               BNE $F939       ;
  F9A1 C1 07               CMPB #$07       ;
  F9A3 26 94               BNE $F939       ;
  F9A5 39                  RTS             ;return subroutine
  F9A6 86 FD               LDAA #$FD       ;Synth5(?),W vector
  F9A8 97 0F               STAA <$0F       ;
  F9AA CE 00 64            LDX #$0064      ;
  F9AD DF 0B               STX <$0B        ;
  F9AF DB 0C               ADDB <$0C       ;$F9AF
  F9B1 96 11               LDAA <$11       ;
  F9B3 99 0B               ADCA <$0B       ;
  F9B5 97 11               STAA <$11       ;
  F9B7 DE 0B               LDX <$0B        ;
  F9B9 25 04               BCS $F9BF       ;branch if Carry set
  F9BB 20 00               BRA $F9BD       ;
  F9BD 20 03               BRA $F9C2       ;$F9BD
  F9BF 08                  INX             ;$F9BF
  F9C0 27 11               BEQ $F9D3       ;branch if = 0
  F9C2 DF 0B               STX <$0B        ;$F9C2
  F9C4 84 0F               ANDA #$0F       ;
  F9C6 8B 9A               ADDA #$9A       ;
  F9C8 97 10               STAA <$10       ;
  F9CA DE 0F               LDX <$0F        ;
  F9CC A6 00               LDAA $00,X      ;
  F9CE B7 04 00            STAA >$0400     ;DAC output
  F9D1 20 DC               BRA $F9AF       ;
  F9D3 39                  RTS             ;return subroutine
  F9D4 4F                  CLRA            ;Synth6(PWM?),W vector
  F9D5 B7 04 00            STAA >$0400     ;DAC output
  F9D8 97 11               STAA <$11       ;
  F9DA 4F                  CLRA            ;$F9DA
  F9DB 91 11               CMPA <$11       ;$F9DB
  F9DD 26 03               BNE $F9E2       ;
  F9DF 73 04 00            COM >$0400      ;DAC invert
  F9E2 C6 12               LDAB #$12       ;$F9E2
  F9E4 5A                  DECB            ;$F9E4
  F9E5 26 FD               BNE $F9E4       ;
  F9E7 4C                  INCA            ;
  F9E8 2A F1               BPL $F9DB       ;branch if plus
  F9EA 73 04 00            COM >$0400      ;DAC invert
  F9ED 7C 00 11            INC >$0011      ;
  F9F0 2A E8               BPL $F9DA       ;branch if plus
  F9F2 39                  RTS             ;return subroutine
  F9F3 CE 00 13            LDX #$0013      ;Synth7(?),W vector
  F9F6 6F 00               CLR $00,X       ;$F9F6,clear
  F9F8 08                  INX             ;
  F9F9 8C 00 1B            CPX #$001B      ;compare index reg
  F9FC 26 F8               BNE $F9F6       ;branch if != 0
  F9FE 86 40               LDAA #$40       ;
  FA00 97 13               STAA <$13       ;
  FA02 CE 00 13            LDX #$0013      ;$FA02
  FA05 86 80               LDAA #$80       ;
  FA07 97 11               STAA <$11       ;
  FA09 5F                  CLRB            ;
  FA0A A6 01               LDAA $01,X      ;$FA0A,expr,X = index
  FA0C AB 00               ADDA $00,X      ;
  FA0E A7 01               STAA $01,X      ;
  FA10 2A 02               BPL $FA14       ;branch if plus
  FA12 DB 11               ADDB <$11       ;
  FA14 74 00 11            LSR >$0011      ;$FA14,logical shift right
  FA17 08                  INX             ;
  FA18 08                  INX             ;
  FA19 8C 00 1B            CPX #$001B      ;compare index reg
  FA1C 26 EC               BNE $FA0A       ;
  FA1E F7 04 00            STAB >$0400     ;DAC output
  FA21 7C 00 12            INC >$0012      ;
  FA24 26 DC               BNE $FA02       ;
  FA26 CE 00 13            LDX #$0013      ;
  FA29 5F                  CLRB            ;
  FA2A A6 00               LDAA $00,X      ;$FA2A
  FA2C 27 0B               BEQ $FA39       ;
  FA2E 81 37               CMPA #$37       ;
  FA30 26 04               BNE $FA36       ;
  FA32 C6 41               LDAB #$41       ;
  FA34 E7 02               STAB $02,X      ;
  FA36 6A 00               DEC $00,X       ;$FA36
  FA38 5C                  INCB            ;
  FA39 08                  INX             ;$FA39
  FA3A 08                  INX             ;
  FA3B 8C 00 1B            CPX #$001B      ;
  FA3E 26 EA               BNE $FA2A       ;
  FA40 5D                  TSTB            ;test if 0 or minus
  FA41 26 BF               BNE $FA02       ;
  FA43 39                  RTS             ;return subroutine
  FA44 7A 00 08            DEC >$0008      ;$FA44,Support,W vector?
  FA47 39                  RTS             ;return subroutine
  FA48 7F 00 08            CLR >$0008      ;$FA48,Support?
  FA4B 97 11               STAA <$11       ;store coutdown value
  FA4D CE FD AA            LDX #$FDAA      ;start point
  FA50 A6 00               LDAA $00,X      ;$FA50
  FA52 27 2D               BEQ $FA81       ;
  FA54 7A 00 11            DEC >$0011      ;
  FA57 27 06               BEQ $FA5F       ;if countdown reach 0
  FA59 4C                  INCA            ;
  FA5A BD FD 1F            JSR CALCOS      ;adjust X by A
  FA5D 20 F1               BRA $FA50       ;
  FA5F 08                  INX             ;$FA5F
  FA60 DF 0F               STX <$0F        ;
  FA62 BD FD 1F            JSR CALCOS      ;adjust X by A
  FA65 DF 0D               STX <$0D        ;
  FA67 DE 0F               LDX <$0F        ;
  FA69 A6 00               LDAA $00,X      ;$FA69
  FA6B 97 15               STAA <$15       ;
  FA6D A6 01               LDAA $01,X      ;
  FA6F EE 02               LDX $02,X       ;
  FA71 DF 13               STX <$13        ;
  FA73 8D 3E               BSR $FAB3       ;branch to subroutine
  FA75 DE 0F               LDX <$0F        ;
  FA77 08                  INX             ;
  FA78 08                  INX             ;
  FA79 08                  INX             ;
  FA7A 08                  INX             ;
  FA7B DF 0F               STX <$0F        ;
  FA7D 9C 0D               CPX <$0D        ;compare index reg
  FA7F 26 E8               BNE $FA69       ;
  FA81 7E FD 0E            JMP $FD0E       ;jump from here
  FA84 86 03               LDAA #$03       ;$FA84,W vector
  FA86 97 08               STAA <$08       ;init count?
  FA88 39                  RTS             ;return subroutine
  FA89 7A 00 08            DEC >$0008      ;$FA89
  FA8C 27 0C               BEQ $FA9A       ;
  FA8E D6 15               LDAB <$15       ;
  FA90 58                  ASLB            ;arithmetic shift left
  FA91 58                  ASLB            ;
  FA92 58                  ASLB            ;
  FA93 58                  ASLB            ;
  FA94 1B                  ABA             ;add accums
  FA95 97 15               STAA <$15       ;
  FA97 4F                  CLRA            ;
  FA98 20 FE               BRA $FA98       ;$FA98
  FA9A 4A                  DECA            ;
  FA9B 81 0B               CMPA #$0B       ;
  FA9D 23 01               BLS $FAA0       ;branch if lower or same
  FA9F 4F                  CLRA            ;
  FAA0 CE FE 41            LDX #$FE41      ;
  FAA3 BD FD 1F            JSR CALCOS      ;
  FAA6 A6 00               LDAA $00,X      ;
  FAA8 CE FF FF            LDX #$FFFF      ;
  FAAB DF 13               STX <$13        ;
  FAAD 8D 04               BSR $FAB3       ;branch to subroutine
  FAAF 8D 2A               BSR $FADB       ;$FAAF,branch to subroutine
  FAB1 20 FC               BRA $FAAF       ;
  FAB3 CE 00 16            LDX #$0016      ;$FAB3,subroutine
  FAB6 81 00               CMPA #$00       ;$FAB6
  FAB8 27 15               BEQ $FACF       ;
  FABA 81 03               CMPA #$03       ;
  FABC 27 09               BEQ $FAC7       ;
  FABE C6 01               LDAB #$01       ;
  FAC0 E7 00               STAB $00,X      ;
  FAC2 08                  INX             ;
  FAC3 80 02               SUBA #$02       ;
  FAC5 20 EF               BRA $FAB6       ;
  FAC7 C6 91               LDAB #$91       ;$FAC7
  FAC9 E7 00               STAB $00,X      ;
  FACB 6F 01               CLR $01,X       ;
  FACD 08                  INX             ;
  FACE 08                  INX             ;
  FACF C6 7E               LDAB #$7E       ;$FACF
  FAD1 E7 00               STAB $00,X      ;
  FAD3 C6 FA               LDAB #$FA       ;
  FAD5 E7 00               STAB $00,X      ;
  FAD7 C6 DD               LDAB #$DD       ;
  FAD9 E7 02               STAB $02,X      ;
  FADB DE 13               LDX <$13        ;$FADB,subroutine
  FADD 4F                  CLRA            ;
  FADE F6 00 12            LDAB >$0012     ;
  FAE1 5C                  INCB            ;
  FAE2 D7 12               STAB <$12       ;
  FAE4 D4 15               ANDB <$15       ;
  FAE6 54                  LSRB            ;logical shift right
  FAE7 89 00               ADCA #$00       ;add with Carry
  FAE9 54                  LSRB            ;
  FAEA 89 00               ADCA #$00       ;
  FAEC 54                  LSRB            ;
  FAED 89 00               ADCA #$00       ;
  FAEF 54                  LSRB            ;
  FAF0 89 00               ADCA #$00       ;
  FAF2 54                  LSRB            ;
  FAF3 89 00               ADCA #$00       ;
  FAF5 54                  LSRB            ;
  FAF6 89 00               ADCA #$00       ;
  FAF8 54                  LSRB            ;
  FAF9 89 00               ADCA #$00       ;
  FAFB 1B                  ABA             ;add accums
  FAFC 48                  ASLA            ;
  FAFD 48                  ASLA            ;
  FAFE 48                  ASLA            ;
  FAFF 48                  ASLA            ;
  FB00 B7 04 00            STAA >$0400     ;DAC output
  FB03 09                  DEX             ;decr index reg
  FB04 27 03               BEQ $FB09       ;
  FB06 7E 00 16            JMP $0016       ;
  FB09 39                  RTS             ;$FB09,return subroutine
  FB0A 36                  PSHA            ;push data,sub routine
  FB0B A6 00               LDAA $00,X      ;$FB0B,load from X
  FB0D DF 0D               STX <$0D        ;store index reg
  FB0F DE 0F               LDX <$0F        ;
  FB11 A7 00               STAA $00,X      ;
  FB13 08                  INX             ;
  FB14 DF 0F               STX <$0F        ;
  FB16 DE 0D               LDX <$0D        ;
  FB18 08                  INX             ;
  FB19 5A                  DECB            ;
  FB1A 26 EF               BNE $FB0B       ;
  FB1C 32                  PULA            ;pull data
  FB1D 39                  RTS             ;return subroutine
  FB1E 4F                  CLRA            ;W vector
  FB1F 97 04               STAA <$04       ;
  FB21 97 05               STAA <$05       ;
  FB23 39                  RTS             ;return subroutine
  FB24 7F 00 04            CLR >$0004      ;W vector
  FB27 96 05               LDAA <$05       ;
  FB29 84 7F               ANDA #$7F       ;
  FB2B 81 1D               CMPA #$1D       ;
  FB2D 26 01               BNE $FB30       ;
  FB2F 4F                  CLRA            ;
  FB30 4C                  INCA            ;$FB30
  FB31 97 05               STAA <$05       ;
  FB33 39                  RTS             ;return subroutine
  FB34 86 0E               LDAA #$0E       ;
  FB36 BD FB 81            JSR $FB81       ;
  FB39 96 05               LDAA <$05       ;
  FB3B 48                  ASLA            ;
  FB3C 48                  ASLA            ;
  FB3D 43                  COMA            ;
  FB3E BD FC 39            JSR $FC39       ;jump subrtn
  FB41 7C 00 17            INC >$0017      ;$FB41
  FB44 BD FC 3B            JSR $FC3B       ;jump subrtn
  FB47 20 F8               BRA $FB41       ;
  FB49 86 03               LDAA #$03       ;W vector,get 3rd set from table
  FB4B BD F8 2A            JSR $F82A       ;get from boot area
  FB4E D6 06               LDAB <$06       ;
  FB50 C1 1F               CMPB #$1F       ;is it 31?
  FB52 26 01               BNE $FB55       ;if not, branch
  FB54 5F                  CLRB            ;if is, set to 0
  FB55 5C                  INCB            ;$FB55, increment it
  FB56 D7 06               STAB <$06       ;
  FB58 86 20               LDAA #$20       ;
  FB5A 10                  SBA             ;subtract accums
  FB5B 5F                  CLRB            ;
  FB5C 81 14               CMPA #$14       ;$FB5C
  FB5E 23 05               BLS $FB65       ;branch if lower or same
  FB60 CB 0E               ADDB #$0E       ;
  FB62 4A                  DECA            ;
  FB63 20 F7               BRA $FB5C       ;
  FB65 CB 05               ADDB #$05       ;$FB65
  FB67 4A                  DECA            ;
  FB68 26 FB               BNE $FB65       ;
  FB6A D7 13               STAB <$13       ;
  FB6C BD F8 3F            JSR $F83F       ;$FB6C
  FB6F 20 FB               BRA $FB6C       ;
  FB71 96 07               LDAA <$07       ;W vector
  FB73 26 09               BNE $FB7E       ;
  FB75 7C 00 07            INC >$0007      ;
  FB78 86 0D               LDAA #$0D       ;
  FB7A 8D 05               BSR $FB81       ;branch to subrtn
  FB7C 20 69               BRA $FBE7       ;
  FB7E 7E FC 2E            JMP $FC2E       ;
  FB81 16                  TAB             ;$FB81, transfer accums
  FB82 58                  ASLB            ;
  FB83 1B                  ABA             ;add accums
  FB84 1B                  ABA             ;
  FB85 1B                  ABA             ;
  FB86 CE FE EC            LDX #$FEEC      ;
  FB89 BD FD 1F            JSR CALCOS      ;
  FB8C A6 00               LDAA $00,X      ;
  FB8E 16                  TAB             ;
  FB8F 84 0F               ANDA #$0F       ;
  FB91 97 14               STAA <$14       ;
  FB93 54                  LSRB            ;logical shift right
  FB94 54                  LSRB            ;
  FB95 54                  LSRB            ;
  FB96 54                  LSRB            ;
  FB97 D7 13               STAB <$13       ;
  FB99 A6 01               LDAA $01,X      ;
  FB9B 16                  TAB             ;
  FB9C 54                  LSRB            ;
  FB9D 54                  LSRB            ;
  FB9E 54                  LSRB            ;
  FB9F 54                  LSRB            ;
  FBA0 D7 15               STAB <$15       ;
  FBA2 84 0F               ANDA #$0F       ;
  FBA4 97 11               STAA <$11       ;
  FBA6 DF 0B               STX <$0B        ;
  FBA8 CE FE 4D            LDX #$FE4D      ;
  FBAB 7A 00 11            DEC >$0011      ;$FBAB
  FBAE 2B 08               BMI $FBB8       ;branch if minus
  FBB0 A6 00               LDAA $00,X      ;
  FBB2 4C                  INCA            ;
  FBB3 BD FD 1F            JSR CALCOS      ;
  FBB6 20 F3               BRA $FBAB       ;
  FBB8 DF 18               STX <$18        ;
  FBBA BD FC 75            JSR $FC75       ;
  FBBD DE 0B               LDX <$0B        ;
  FBBF A6 02               LDAA $02,X      ;
  FBC1 97 1A               STAA <$1A       ;
  FBC3 BD FC 87            JSR $FC87       ;
  FBC6 DE 0B               LDX <$0B        ;
  FBC8 A6 03               LDAA $03,X      ;
  FBCA 97 16               STAA <$16       ;
  FBCC A6 04               LDAA $04,X      ;
  FBCE 97 17               STAA <$17       ;
  FBD0 A6 05               LDAA $05,X      ;
  FBD2 16                  TAB             ;
  FBD3 A6 06               LDAA $06,X      ;
  FBD5 CE FF 55            LDX #$FF55      ;
  FBD8 BD FD 1F            JSR CALCOS      ;
  FBDB 17                  TBA             ;transfer accums
  FBDC DF 1B               STX <$1B        ;
  FBDE 7F 00 23            CLR >$0023      ;
  FBE1 BD FD 1F            JSR CALCOS      ;
  FBE4 DF 1D               STX     <$1D    ;
  FBE6 39                  RTS             ;return subroutine
  FBE7 96 13               LDAA <$13       ;
  FBE9 97 22               STAA <$22       ;
  FBEB DE 1B               LDX <$1B        ;$FBEB
  FBED DF 0D               STX <$0D        ;
  FBEF DE 0D               LDX <$0D        ;$FBEF
  FBF1 A6 00               LDAA $00,X      ;
  FBF3 9B 23               ADDA <$23       ;
  FBF5 97 21               STAA <$21       ;
  FBF7 9C 1D               CPX <$1D        ;
  FBF9 27 26               BEQ $FC21       ;
  FBFB D6 14               LDAB <$14       ;
  FBFD 08                  INX             ;
  FBFE DF 0D               STX <$0D        ;
  FC00 CE 00 24            LDX #$0024      ;$FC00
  FC03 96 21               LDAA <$21       ;$FC03
  FC05 4A                  DECA            ;$FC05
  FC06 26 FD               BNE $FC05       ;
  FC08 A6 00               LDAA $00,X      ;
  FC0A B7 04 00            STAA >$0400     ;DAC output
  FC0D 08                  INX             ;
  FC0E 9C 1F               CPX <$1F        ;
  FC10 26 F1               BNE $FC03       ;
  FC12 5A                  DECB            ;
  FC13 08                  INX             ;
  FC14 09                  DEX             ;
  FC15 08                  INX             ;
  FC16 09                  DEX             ;
  FC17 08                  INX             ;
  FC18 09                  DEX             ;
  FC19 08                  INX             ;
  FC1A 09                  DEX             ;
  FC1B 01                  NOP             ;no operation
  FC1C 01                  NOP             ;
  FC1D 20 E1               BRA $FC00       ;
  FC1F 96 15               LDAA <$15       ;
  FC21 8D 64               BSR $FC87       ;branch to subrtn
  FC23 7A 00 22            DEC >$0022      ;
  FC26 26 C3               BNE $FBEB       ;
  FC28 96 07               LDAA <$07       ;
  FC2A 26 48               BNE $FC74       ;
  FC2C 96 16               LDAA <$16       ;
  FC2E 27 44               BEQ $FC74       ;
  FC30 7A 00 17            DEC >$0017      ;
  FC33 27 3F               BEQ $FC74       ;
  FC35 9B 23               ADDA <$23       ;
  FC37 97 23               STAA <$23       ;
  FC39 DE 1B               LDX <$1B        ;
  FC3B 5F                  CLRB            ;
  FC3C 96 23               LDAA <$23       ;$FC3E
  FC3E 7D 00 16            TST >$0016      ;test for zero or negative
  FC41 2B 08               BMI $FC4B       ;branch if minus
  FC43 AB 00               ADDA $00,X      ;
  FC45 25 0A               BCS $FC51       ;branch if Carry set
  FC47 20 0D               BRA $FC56       ;
  FC49 AB 00               ADDA $00,X      ;
  FC4B 27 04               BEQ $FC51       ;
  FC4D 25 07               BCS $FC56       ;
  FC4F 5D                  TSTB            ;$FC51
  FC50 27 0A               BEQ $FC5C       ;
  FC52 20 11               BRA $FC65       ;
  FC54 5D                  TSTB            ;$FC56
  FC55 26 05               BNE $FC5C       ;
  FC57 DF 1B               STX <$1B        ;
  FC59 5C                  INCB            ;
  FC5A 08                  INX             ;$FC5C
  FC5B 9C 1D               CPX <$1D        ;
  FC5D 26 DF               BNE $FC3E       ;
  FC5F 5D                  TSTB            ;
  FC60 26 03               BNE $FC65       ;
  FC62 39                  RTS             ;return subroutine
  FC63 DF 1D               STX <$1D        ;$FC65
  FC65 96 15               LDAA <$15       ;
  FC67 27 08               BEQ $FC71       ;
  FC69 8D 0A               BSR $FC75       ;
  FC6B 96 1A               LDAA <$1A       ;
  FC6D 8D 18               BSR $FC87       ;
  FC6F 7E FB E7            JMP $FBE7       ;$FC71
  FC72 39                  RTS             ;return subroutine
  FC73 CE 00 24            LDX #$0024      ;$FC75
  FC76 DF 0F               STX <$0F        ;
  FC78 DE 18               LDX <$18        ;
  FC7A E6 00               LDAB $00,X      ;
  FC7C 08                  INX             ;
  FC7D BD FB 0A            JSR $FB0A       ;
  FC80 DE 0F               LDX <$0F        ;
  FC82 DF 1F               STX <$1F        ;
  FC84 39                  RTS             ;return subroutine
  FC85 4D                  TSTA            ;test A
  FC86 27 2D               BEQ $FCB5       ;
  FC88 DE 18               LDX <$18        ;
  FC8A DF 0D               STX <$0D        ;
  FC8C CE 00 24            LDX #$0024      ;
  FC8F 97 12               STAA <$12       ;
  FC91 DF 0F               STX <$0F        ;
  FC93 DE 0D               LDX <$0D        ;
  FC95 D6 12               LDAB <$12       ;
  FC97 D7 11               STAB <$11       ;
  FC99 E6 01               LDAB $01,X      ;
  FC9B 54                  LSRB            ;
  FC9C 54                  LSRB            ;
  FC9D 54                  LSRB            ;
  FC9E 54                  LSRB            ;
  FC9F 08                  INX             ;
  FCA0 DF 0D               STX <$0D        ;
  FCA2 DE 0F               LDX <$0F        ;
  FCA4 A6 00               LDAA $00,X      ;
  FCA6 10                  SBA             ;subtract accums
  FCA7 7A 00 11            DEC >$0011      ;
  FCAA 26 FC               BNE $FCA8       ;
  FCAC A7 00               STAA $00,x      ;
  FCAE 08                  INX             ;
  FCAF 9C 1F               CPX <$1F        ;
  FCB1 26 E0               BNE $FC93       ;
  FCB3 39                  RTS             ;return subroutine
  FCB4 8E 00 7F    IRQ     LDS #$007F      ;IRQ handler,select sound,load stack pointer
  FCB7 B6 04 02            LDAA >$0402     ;PIA channel B
  FCBA 0E                  CLI             ;clear interrupt mask
  FCBB 43                  COMA            ;complement,flip bits
  FCBC 84 1F               ANDA #$1F       ;mask upper 3 bits
  FCBE D6 08               LDAB <$08       ;
  FCC0 27 0B               BEQ $FCCD       ;branch if = 0
  FCC2 2A 05               BPL $FCC9       ;branch if plus
  FCC4 BD FA 48            JSR $FA48       ;
  FCC7 4A                  DECA            ;start > 0
  FCC8 BD FA 89            JSR $FA89       ;
  FCCB 5F                  CLRB            ;
  FCCC 81 0E               CMPA #$0E       ;
  FCCE 27 04               BEQ $FCD4       ;
  FCD0 D7 06               STAB <$06       ;
  FCD2 81 12               CMPA #$12       ;
  FCD4 27 04               BEQ $FCDA       ;
  FCD6 D7 07               STAB <$07       ;
  FCD8 F6 EF FD            LDAB >$EFFD     ;$FCDA, ?
  FCDB C1 7E               CMPB #$7E       ;
  FCDD 26 05               BNE $FCE4       ;
  FCDF BD EF FD            JSR $EFFD       ;?
  FCE2 4D                  TSTA            ;
  FCE3 27 29               BEQ $FD0E       ;
  FCE5 4A                  DECA            ;
  FCE6 81 0C               CMPA #$0C       ;
  FCE8 22 0A               BHI $FCF4       ;branch if higher
  FCEA BD FB 81            JSR $FB81       ;
  FCED BD FB E7            JSR $FBE7       ;
  FCF0 20 1C               BRA $FD0E       ;
  FCF2 81 1B               CMPA #$1B       ;
  FCF4 22 10               BHI $FD06       ;
  FCF6 80 0D               SUBA #$0D       ;
  FCF8 48                  ASLA            ;x 2 for offset in table
  FCF9 CE FD 58            LDX #$FD58      ;addr VWTAB, W Vector table
  FCFC 8D 21               BSR CALCOS      ;calc offset into table
  FCFE EE 00               LDX $00,X       ;load vector addr
  FD00 AD 00               JSR $00,X       ;
  FD02 20 0A               BRA $FD0E       ;
  FD04 80 1C               SUBA #$1C       ;
  FD06 BD F8 2A            JSR $F82A       ;
  FD09 BD F8 3F            JSR $F83F       ;
  FD0C 96 04               LDAA <$04       ;$FD0E
  FD0E 9A 05               ORAA <$05       ;inclusive OR accum
  FD10 27 00               BEQ $FD12       ;
  FD12 4F                  CLRA            ;
  FD13 97 07               STAA <$07       ;
  FD15 96 04               LDAA <$04       ;
  FD17 27 05               BEQ $FD1E       ;
  FD19 7E F9 13            JMP $F913       ;
  FD1C 7E FB 34            JMP $FB34       ;
  FD1F DF 0D       CALCOS  STX <$0D        ;subrtn, unsigned offset of A + X, val in X
  FD21 9B 0E               ADDA <$0E       ;add A to LSB of index base value
  FD23 97 0E               STAA <$0E       ;store it
  FD25 24 05               BCC $FD2C       ;branch if Carry clear
  FD27 7C 00 0D            INC >$000D      ;inc MSB of index base value
  FD2A DE 0D               LDX <$0D        ;load value
  FD2C 39                  RTS             ;return subroutine
  FD2D 0F          NMI     SEI             ;set interrupt mask, vector at $FFFC
  FD2E 8E 00 7F            LDS #$007F      ;load stack pointer
  FD31 CE FF FF            LDX #$FFFF      ;load index reg
  FD34 5F                  CLRB            ;
  FD35 E9 00               ADCB $00,X      ;$FD37,add with Carry
  FD37 09                  DEX             ;
  FD38 8C F8 00            CPX #$F800      ;
  FD3B 26 FA               BNE $FD37       ;
  FD3D E1 00               CMPB $00,X      ;
  FD3F 27 03               BEQ $FD44       ;
  FD41 3E                  WAI             ; wait for interrupt
  FD42 86 01               LDAA #$01       ;
  FD44 BD F8 2A            JSR $F82A       ;
  FD47 BD F8 3F            JSR $F83F       ;
  FD4A F6 EF FA            LDAB >$EFFA     ;?
  FD4D C1 7E               CMPB #$7E       ;
  FD4F 26 DC               BNE NMI         ;branch if != 0 to NMI
  FD51 BD EF FA            JSR $EFFA       ;?
  FD54 20 D7               BRA NMI         ;
  FD56 FB 48       VWTAB   FDB $FB48       ;$FD58,form double byte
  FD58 F9 13               FDB $F913       ;
  FD5A FB 24               FDB $FB24       ;
  FD5C F8 8C               FDB $F88C       ;
  FD5E FB 71               FDB $FB71       ;
  FD60 FB 1E               FDB $FB1E       ;
  FD62 F8 CD               FDB $F8CD       ;
  FD64 F8 94               FDB $F894       ;
  FD66 F9 1C               FDB $F91C       ;
  FD68 F9 23               FDB $F923       ;
  FD6A F9 A6               FDB $F9A6       ;
  FD6C F9 D4               FDB $F9D4       ;
  FD6E F9 F3               FDB $F9F3       ;
  FD70 FA 44               FDB $FA44       ;
  FD72 FA 84               FDB $FA84       ;


  Symbol Table 

  VWTAB              FD56
  IRQ                FCB4
  NMI                FD2D
  RESET              F801
  CALCOS             FD1F
