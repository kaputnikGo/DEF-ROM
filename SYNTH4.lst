; SYNTH4 CODE - 06 Nov 2019
; hack for Heathkit ET-3400 Audio Setup - PIA B input var parameter, tested, working
; user RAM = 197 + 256 bytes = 453
; addr 0000 - 00C4 and 0100 - 01FF
; using PIA addr 8000 (not 0400)
; not using actual NMI, IRQ , SWI etc
; mpu clock speed is default/low (quoted as 0.5 MHz), expecting ~894750 cycles per second
; also quoted as clocked at 100kHz
; working but not as expected (2.5x unheard) 

;*************************************;
; PIA B read subroutine - NOT NEEDED, IRQ reads PIA B
;*************************************;
0000 : 4F         clra                ; clear A
0001 : B6 80 02   ldaa  X8002         ; load A with PIA B
0004 : 43         coma                ; complement A (flip bits)
0005 : B7 80 00   staa  X8000         ; store A in 8000 - was 0100 (parameter 1 of waveform)
0008 : 39         rts                 ; return from subroutine
;*************************************;
0009 : 00 00                          ; used by main loop
000B : 03                             ; set for IRQ B read
000C : 00                             ; used by main loop
; ~       RESERVED                    ;
0019 : 00                             ; end main loop mem (19 bytes)
;*************************************;
;RESET INIT (POWER-ON) org 001A
;*************************************;
001A : 8E 01 FF   lds #$01FF          ; load SP with 01FFh
001D : CE 80 00	  ldx #$8000          ; load X with 8000h, PIA (DAC) addr
0020 : 6F 01		  clr	$01,x           ; clear(00) addr X + 01h (8001, PIA DDR port A) 
0022 : 6F 03      clr $03,x           ; clear(00) addr X + 03h (8003, PIA DDR port B)
0024 : 6F 02      clr $02,x           ; clear(00) addr X + 02h (8002, port B input)
0026 : 86 FF		  ldaa	#$FF          ; load A with FFh (1111 1111)
0028 : A7 00		  staa	$00,x         ; store A in addr X + 00h (8000, port A output)
002A : 86 3C		  ldaa	#$3C          ; load A with 3Ch(0011 1100)
002C : A7 01		  staa	$01,x         ; store A in addr X + 01h (8001)
002E : 86 37      ldaa  #$37          ; load A with 37h(0011 0111)(28h 0010 1000)
0030 : A7 03      staa  $03,x         ; store A in addr X + 03h (8003) 
;*************************************;
;NMI - MAIN LOOP start
;*************************************;
0032 : CE FF FF		ldx	#$FFFF          ; load X with value FFFFh ( or 78h )
0035 : 5F		      clrb                ; clear (00) B
0036 : E9 00		  adcb	$00,x         ; add B + X + 00h with Carry into B
;*************************************;
;IRQ - modified
;*************************************;
0038 B6 80 02     ldaa $8002          ;load A with PIA B
003B 43           coma                ;complement A,flip bits
003C 84 1F        anda  #$1F          ;mask upper 3 bits (0001 1111)
003E D6 09        ldab  $0B           ; <- value 0x03 ? was $08
;*************************************;
;SYNTH4, org 004C
;*************************************;
0040 97 18        staa  $18           ;$F930
0042 D7 13        stab  $13           ;
0044 DF 16        stx $16             ;store index register
0046 7F 00 15     clr $0015           ;clear addr 0015
;LF939: LOOP1
0049 DE 16        ldx $16             ;LF939,load index reg from $16
004B B6 80 00     ldaa  $8000         ;load A with SOUND <- prob, as it 00?
;LF93E: LOOP2
004E 16           tab                 ;LF93E,transfer accum A to B
004F 54           lsrb                ;logical shift right B
0050 54           lsrb                ;
0051 54           lsrb                ;
0052 D8 0A        eorb  $0A           ;exclusive OR $0A into B
0054 54           lsrb                ;
0055 76 00 09     ror $0009           ;rotate right (C -> b7 - b0 -> C )
0058 76 00 0A     ror $000A           ;
005B D6 13        ldab  $13           ;
005D 7D 00 19     tst $0019           ;test for 0 or negative
0060 27 02        beq LF954           ;branch if = 0
0062 D4 09        andb  $09           ;logical and B
;LF954: GOTO1
0064 D7 14        stab  $14           ;LF954
0066 D6 15        ldab  $15           ;
0068 91 0A        cmpa  $0A           ;compare
006A 22 12        bhi LF96E           ;branch if higher
;LF95C: LOOP3
006C 09           dex                 ;LF95C,decr index reg
006D 27 26        beq LF985           ;
006F B7 80 00     staa  $8000         ;SOUND
0072 DB 15        addb  $15           ;
0074 99 14        adca  $14           ;add with Carry
0076 25 16        bcs LF97E           ;branch if Carry set
0078 91 0A        cmpa  $0A           ;
007A 23 F0        bls LF95C           ;branch if lower or same
007C 20 10        bra LF97E           ;
;LF96E: LOOP4
007E 09           dex                 ;LF96E
007F 27 14        beq LF985           ;
0081 B7 80 00     staa  $8000         ;SOUND
0084 D0 15        subb  $15           ;
0086 92 14        sbca  $14           ;subtract with Carry
0088 25 04        bcs LF97E           ;
008A 91 0A        cmpa  $0A           ;
008C 22 F0        bhi LF96E           ;branch if higher
;LF97E: GOTO2
008E 96 0A        ldaa  $0A           ;LF97E
0090 B7 80 00     staa  $8000         ;SOUND
0093 20 B9        bra LF93E           ;
;LF985: GOTO3
0095 D6 18        ldab  $18           ;LF985
0097 27 B5        beq LF93E           ;
0099 96 13        ldaa  $13           ;
009B D6 15        ldab  $15           ;
009D 44           lsra                ;logical shift right A
009E 56           rorb                ;rotate right B
009F 44           lsra                ;
00A0 56           rorb                ;
00A1 44           lsra                ;
00A2 56           rorb                ;
00A3 43           coma                ;complement 1s A
00A4 50           negb                ;negate (complement 2s) B
00A5 82 FF        sbca  #$FF          ;subtract with Carry
00A7 DB 15        addb  $15           ;
00A9 99 13        adca  $13           ;add with Carry
00AB D7 15        stab  $15           ;
00AD 97 13        staa  $13           ;
00AF 26 98        bne LF939           ;
00B1 C1 07        cmpb  #$07          ;
00B3 26 94        bne LF939           ;
00B5 BD 00 00     jsr L0000           ; jump sub to PIA B read
00B8 7E 00 32     jmp L0032           ; jump to start L0032

;00C4 NO NO NO NO

